package BU

import scala.collection.mutable.Buffer
import scala.collection.mutable.Map


class BUnuottiPiirturi(input: String, tahtilaji: Int, lyrics: String){
  
  def this(input: String, tahtilaji: Int) = this (input, tahtilaji, "")
  def this(input: String) = this (input, 4, "")
  
 
  var viivasto = Buffer[Array[Char]]()
  var biisi = Buffer[Buffer[Array[Char]]]()
  val viiva = "------------------------------------------------------------------------------------------------------------------------"    // 120
  val vali =  "                                                                                                                        "  
  val nuotit = Map("lyr" -> 13, "c1" -> 12, "d1" -> 11,  "e1" -> 10,  "f1" -> 9,  "g1"-> 8,  "a1"-> 7,  "h1" -> 6, "c2" -> 5, "d2" -> 4,  "e2" -> 3,  "f2" -> 2,  "g2"-> 1,  "a2"-> 0)
  val inputArray = input.split(" ")
  var lyricsArray = lyrics.split(" ")                                     
  var x = 14    // ekan nuotin x-akselilukema, nuottiavain vie tilaa
  var biisiLoppu = false
  var tahtiviivaLaskuri = 0.0        // laskee iskuja
  var tahtiviivaLkm = 0             // halutaan 4 tahtia riville
  var onkoMinutJoPiirretty = false
  
  
  //  nuotti kerrallaan, PAITSI samaan varteen 1/8- ja 1/16-nuotit !!!!!!!
 
 
  muodostaViivasto
  inputArray(0)
  val gAvain = new Gavain(viivasto)
  viivasto = gAvain.mergeViivastoJaGavain
  for ( i<- 0 until inputArray.length){
     var tavu = ""     
     if(lyricsArray.isDefinedAt(i)){
         tavu = lyricsArray(i)
         piirraTavu(tavu)
     }    
     var solu = inputArray(i)    // esim. "g1#--"
     var nuotinNimi = ""
     var pituus = solu.count(_ == '-')  
     
     nuotinNimi = tutkiEtumerkit(solu)
     
     if(x >= viiva.length() -10){      // nuottiviivasto alkaa olla lopuillaan
       println(x)
       x = 4
       var kopiokissa = viivasto.clone()
       biisi += kopiokissa   
       muodostaViivasto
     }      
     
     if (nuotinNimi == "z"){
        piirraTauko
        tahtiviivaLaskuri += 1
        onkoMinutJoPiirretty = false
     }   
     if(pituus == 1){       
        piirraNeljasOsaNuotti(nuotinNimi)
        x += 1
        onkoMinutJoPiirretty = false
     } else if (pituus == 2){
        piirraPuoliNuotti(nuotinNimi)
        x += 2
        onkoMinutJoPiirretty = false
     } else if (pituus == 3){
        piirraPisteellinenPuoliNuotti(nuotinNimi)
        x += 3
        onkoMinutJoPiirretty = false
     }  else if (pituus == 4){
        piirraKokoNuotti(nuotinNimi)
        x += 4
        onkoMinutJoPiirretty = false
     } else if (pituus == 0 && !onkoMinutJoPiirretty){         // kahdeksasosa
        if( i < inputArray.length -1 && inputArray(i+1).count(_ == '-') == 0 ){
           piirraKahdeksasosaPari(nuotinNimi, inputArray(i+1))
           tahtiviivaLaskuri += 1
           onkoMinutJoPiirretty = !onkoMinutJoPiirretty
           x += 2
        }   
        else {   
          piirraKahdeksasosa(nuotinNimi)             
          tahtiviivaLaskuri += 0.5
          onkoMinutJoPiirretty = !onkoMinutJoPiirretty
        }  
     }
     else if (pituus == 0 && onkoMinutJoPiirretty)
       onkoMinutJoPiirretty = !onkoMinutJoPiirretty
     x += 4     
     tahtiviivaLaskuri += pituus
     println(tahtiviivaLaskuri)
     if (tahtiviivaLaskuri == tahtilaji){
        tahtiviivaLkm += 1
        piirraTahtiviiva(x+1)  
        x += 5
        tahtiviivaLaskuri = 0
     }  
  }   // end for solu
  biisiLoppu = true
  piirraTahtiviiva(x-3)   // biisin lopetusviiva, tekee turhaan uuden rivin !!!!
  
  for(i<-0 until biisi.size){
       println("\n")
       piirraViivasto(biisi(i))
    }
    
    
  //////////////     funktiot:     ////////////////////////////////////////////////////////////////////
  
  def tutkiEtumerkit(solu: String) = {
    var nuotinNimiTemp = ""
    for(c<- solu){
        if (c != '-'){
          if(c == '#' )
            piirraYlennysMerkki(nuotinNimiTemp)            
          else if(c == 'b' )  
            piirraAlennusMerkki(nuotinNimiTemp) 
          else   nuotinNimiTemp += c.toString   
        }   
     }    
     nuotinNimiTemp    
  }
  
  def piirraTavu(tavu: String) = {
   
    var apuX = x
    for(c<-tavu){
       viivasto(13)(apuX) = c
       apuX += 1
    }   
  }
  
  def piirraYlennysMerkki(nuotinNimi: String) = {
    viivasto(nuotit(nuotinNimi))(x) = '#'   
    x += 1
  }
  
  def piirraAlennusMerkki(nuotinNimi: String) = {
    viivasto(nuotit(nuotinNimi))(x) = 'b'   
    x += 1
  }

  def piirraTauko = {
    viivasto(nuotit("c2"))(x) = '\\'
    viivasto(nuotit("c2")+1)(x) = '/'
    viivasto(nuotit("c2")+2)(x) = '\\'
    viivasto(nuotit("c2")+3)(x) = '/'    
  }
  
  def piirraVarsi(nuotinNimi: String, x: Int) = {   
     if(nuotit(nuotinNimi) < nuotit("h1")){       // varsi alas
       viivasto(nuotit(nuotinNimi)+1)(x-1) = '|'
       viivasto(nuotit(nuotinNimi)+2)(x-1) = '|'
       viivasto(nuotit(nuotinNimi)+3)(x-1) = '|'
    } else{
       viivasto(nuotit(nuotinNimi)-1)(x+1) = '|'  // varsi ylös
       viivasto(nuotit(nuotinNimi)-2)(x+1) = '|'
       viivasto(nuotit(nuotinNimi)-3)(x+1) = '|'
    }
  }
  
  def piirraKahdeksasosaPari(nuotinNimi: String, toisenNuotinNimi: String) = {
    val toisenNuotinNimiTutk = tutkiEtumerkit(toisenNuotinNimi) 
    viivasto(nuotit(nuotinNimi))(x)='@'          // 1/8-nuottipari, varret ylös
    piirraVarsi(nuotinNimi, x)
    viivasto(nuotit(toisenNuotinNimiTutk))(x+5)='@'          // 1/8-nuottipari, varret ylös
    piirraVarsi(toisenNuotinNimiTutk, x+5)
    if(nuotit(nuotinNimi) < nuotit("h1")) {     
       viivasto(nuotit(nuotinNimi)+4)(x+1)='='
       viivasto(nuotit(nuotinNimi)+4)(x+2)='='
       viivasto(nuotit(nuotinNimi)+4)(x+3)='='
       viivasto(nuotit(nuotinNimi)+4)(x+4)='='
       viivasto(nuotit(nuotinNimi)+4)(x+5)='='
    }
    else  {     
       viivasto(nuotit(nuotinNimi)-4)(x+1)='='
       viivasto(nuotit(nuotinNimi)-4)(x+2)='='
       viivasto(nuotit(nuotinNimi)-4)(x+3)='='
       viivasto(nuotit(nuotinNimi)-4)(x+4)='='
       viivasto(nuotit(nuotinNimi)-4)(x+5)='='
    }
   }
  
 def piirraKahdeksasosa(nuotinNimi: String) = {   
    piirraNeljasOsaNuotti(nuotinNimi)
    if(nuotit(nuotinNimi) < nuotit("h1"))      
      viivasto(nuotit(nuotinNimi)+3)(x) = '/'    // väkä 
    else   
      viivasto(nuotit(nuotinNimi)-3)(x+2) = '\\'
 }
  
  def piirraNeljasOsaNuotti(nuotinNimi: String) = {                                 // 1/4
    viivasto(nuotit(nuotinNimi))(x) = '@'   
    if(nuotinNimi == "c1"){
       viivasto(nuotit(nuotinNimi))(x-1) = '-'    // keski-c:lle apuviiva
       viivasto(nuotit(nuotinNimi))(x+1) = '-'
    }
    piirraVarsi(nuotinNimi, x)   
  }
  
  
   def piirraPuoliNuotti(nuotinNimi: String) = {                  // 1/2
    viivasto(nuotit(nuotinNimi))(x) = '('   
    viivasto(nuotit(nuotinNimi))(x+1) = ')'   
    if(nuotinNimi == "c1"){
       viivasto(nuotit(nuotinNimi))(x-1) = '-'    // keski-c:lle apuviiva
       viivasto(nuotit(nuotinNimi))(x+2) = '-'
    }
    if(nuotit(nuotinNimi) < nuotit("h1")){   // varsi alas
       viivasto(nuotit(nuotinNimi)+1)(x) = '|'
       viivasto(nuotit(nuotinNimi)+2)(x) = '|'
       viivasto(nuotit(nuotinNimi)+3)(x) = '|'
    } else{
       viivasto(nuotit(nuotinNimi)-1)(x+1) = '|'     // varsi ylös
       viivasto(nuotit(nuotinNimi)-2)(x+1) = '|'
       viivasto(nuotit(nuotinNimi)-3)(x+1) = '|'
    }
  }
   
   def piirraPisteellinenPuoliNuotti(nuotinNimi: String) = {                  // . 
     piirraPuoliNuotti(nuotinNimi)
     viivasto(nuotit(nuotinNimi))(x+2) = '.'   
  }
   
   def piirraKokoNuotti(nuotinNimi: String) = {                         // koko
    viivasto(nuotit(nuotinNimi))(x) = '('   
    viivasto(nuotit(nuotinNimi))(x+1) = ')'   
    if(nuotinNimi == "c1"){
       viivasto(nuotit(nuotinNimi))(x-1) = '-'   
       viivasto(nuotit(nuotinNimi))(x+2) = '-'
    }
  }
   
  
    
    def piirraViivasto(staffi: Buffer[Array[Char]]) = {
       for(i<-0 to 13){
         for(c <- staffi(i)){
            print(c)
         }    
        println
       }   
    }
    
    
    
    def piirraTahtiviiva (x:Int) = {
       for(i<-2 to 10)
         viivasto(i)(x) = '|'
       if (x > viiva.length - 10 || tahtiviivaLkm == 4 || biisiLoppu){
         for (i<- 1 to 5)
           for(j<- x+1 until viiva.length)
              viivasto(i*2)(j)= ' '
         this.x = 0  
         var kopiokissa = viivasto.clone()
         biisi += kopiokissa
         muodostaViivasto
         tahtiviivaLkm = 0
       }
    }
  
    
    def muodostaViivasto = {  
      viivasto.clear()
      viivasto += vali.toCharArray()          // ylös tyhjää mm. varsia varten   // fix  += !!!!!!!!!!!!!!!!!!
      for(i <- 1 to 5){
        viivasto += vali.toCharArray()        // ylin paikka on g2
        viivasto += viiva.toCharArray()       // 5 viivaa
       }
       viivasto += vali.toCharArray()          // d1
       viivasto += vali.toCharArray()          // keski-c:lle tila
       viivasto += vali.toCharArray()          // sanoille tila
  }
}